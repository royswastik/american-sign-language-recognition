EOS = sent_extraction_methods;
sequence = {'goodnight', 'father', 'and', 'cop'};
load('pca_coef.mat');
load('models/SVM_model')
% model = model_dtree;
model = svm_model;
load('constants');
for i=1:length(sequence)
    data = readtable(strcat('sentences/Segmented_Sentence1/sentence1_',cell2mat(sequence(i)),'_2.csv'));
    data = data(:,1:34);
    data = table2array(data)';


    f_acc_l = [EOS.maxFFT(data(1,:)), EOS.maxFFT(data(2,:)), EOS.maxFFT(data(3,:))];
    f_acc_r = [EOS.maxFFT(data(4,:)) EOS.maxFFT(data(5,:)) EOS.maxFFT(data(6,:)) ...
        EOS.waveform_length(data(4,:)) EOS.waveform_length(data(5,:)) EOS.waveform_length(data(6,:)) ...
        EOS.root_mean_square(data(4,:)) EOS.root_mean_square(data(5,:)) EOS.root_mean_square(data(6,:)) ...
        EOS.vector_mean(data(4,:), data(5,:), data(6,:)) EOS.vector_sd(data(4,:), data(5,:), data(6,:)) ... 
        EOS.mean_power_f(data(4,:)) EOS.mean_power_f(data(5,:))  EOS.mean_power_f(data(6,:)) ...
        EOS.sd_power_f(data(4,:))  EOS.sd_power_f(data(5,:))  EOS.sd_power_f(data(6,:)) ...
        EOS.energy_consumption(data(4,:)) EOS.energy_consumption(data(5,:)) EOS.energy_consumption(data(6,:)) ...  
        EOS.skew(data(4,:)) EOS.skew(data(5,:)) EOS.skew(data(6,:))  ...
        EOS.average_in_heading_direction(data(4,:), data(5,:), data(6,:))];

    f_emg_l = [EOS.maxFFT(data(7,:)) EOS.maxFFT(data(8,:)) EOS.maxFFT(data(9,:)) ...
        EOS.maxFFT(data(10,:)) EOS.maxFFT(data(11,:)) EOS.maxFFT(data(12,:)) ...
        EOS.maxFFT(data(13,:))];
    f_emg_r = [EOS.maxFFT(data(15,:)) EOS.maxFFT(data(16,:)) EOS.maxFFT(data(17,:)) ...
        EOS.maxFFT(data(18,:)) EOS.maxFFT(data(19,:)) EOS.maxFFT(data(20,:)) ...
        EOS.maxFFT(data(21,:))];
    f_gyro_l = [EOS.maxFFT(data(23,:)) EOS.maxFFT(data(24,:)) EOS.maxFFT(data(25,:))];
    f_gyro_r = [EOS.maxFFT(data(26,:)) EOS.maxFFT(data(27,:)) EOS.maxFFT(data(28,:)) ...
            EOS.waveform_length(data(26,:)) EOS.waveform_length(data(27,:)) EOS.waveform_length(data(28,:)) ...
            EOS.root_mean_square(data(26,:)) EOS.root_mean_square(data(27,:)) EOS.root_mean_square(data(28,:)) ...
            EOS.vector_mean(data(26,:), data(27,:), data(28,:)) ... 
            EOS.vector_sd(data(26,:), data(27,:), data(28,:)) ...
            EOS.mean_power_f(data(26,:)) EOS.mean_power_f(data(27,:))  EOS.mean_power_f(data(28,:)) ...
            EOS.sd_power_f(data(26,:)) EOS.sd_power_f(data(27,:)) EOS.sd_power_f(data(28,:)) ...
            EOS.energy_consumption(data(26,:)) EOS.energy_consumption(data(27,:)) EOS.energy_consumption(data(28,:)) ...
            EOS.skew(data(26,:)) EOS.skew(data(27,:)) EOS.skew(data(28,:)) ...
            EOS.average_in_heading_direction(data(26,:), data(27,:), data(28,:))];
    f_or_l = [EOS.maxFFT(data(29,:)) EOS.maxFFT(data(30,:)) EOS.maxFFT(data(31,:))];
    f_or_r = [EOS.maxFFT(data(32,:)) EOS.maxFFT(data(33,:)) EOS.maxFFT(data(34,:))];

    feature_row = [f_acc_l,f_acc_r, f_emg_l, f_emg_r, f_gyro_l, f_gyro_r, f_or_l, f_or_r];

   
%     pca_features = feature_row*coefs;
%     pca_features = pca_features(:, 1:35);

%     [label, score] = predict(model,pca_features);
    
    [label, score] = predict(model,feature_row);
    disp(score)
    disp(cell2mat(actions(label)));
end


